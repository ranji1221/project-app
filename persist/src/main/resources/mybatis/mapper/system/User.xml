<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.company.project.model.system">
	<insert id="saveUser" parameterType="User">
		insert into tbl_user(uname,pwd,enabled,description) values(#{uname},#{pwd},#{enabled},#{description})
	</insert>
	<update id="updateUser" parameterType="User">
		update tbl_user set uname=#{uname},pwd=#{pwd},enabled=#{enabled},description=#{description} where id=#{id}
	</update>
	<delete id="deleteUser" parameterType="Integer">
		delete from tbl_user where id=#{id}
	</delete>
	<delete id="deleteAllUsers">
		delete from tbl_user
	</delete>
	<select id="findUser" parameterType="Integer" resultType="User">
		select * from tbl_user where id=#{id}
	</select>
	<select id="findAllUsers" resultType="User">
		select * from tbl_user
	</select>
	<!-- 以上是基础Dao方法的实现，下面方法才更加具有实际的意义 -->
	
	<!--
		作者RanJi之语录：
			  致广大编程的同志们：
			  以下所要实现的方法多数为查询数据的方法，从实际的工作中来看一般的查询总要涉及到分页查询的问题；
			  笔者认为分页查找必定是两个方法同时出现，其目的是分别得到(分页后的内容)和(相关内容的总条目数)；
			  笔者默认实现的是不带任何查询条件的分页实现，带参数的实现只能由作者来实现。
			  注意：Map参数在默认实现的查询总条目数的实现中不具有任何实际意义，但为了统一在具有更普遍意义的带查询参数的查询因而加上了Map参数。
			  若有任何好的想法或者建议，请联系笔者：QQ: 95724368，邮箱：jiran1221@163.com 
	-->
	<select id="findPaginatedUsers" resultType="User" parameterType="Map">
		select * from tbl_user limit #{offset}, #{limit}
	</select>
	<select id="getNumberOfUserItems" resultType="Integer" parameterType="Map">
		select count(*) from tbl_user
	</select>
</mapper>